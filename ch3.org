** Set A

1. True for all Commutative, Associative, Identity, Inverse
xy = x + y + k = y + x + k = yx

(xy)z = (x + y + k) + z + k = x + (y + z + k) + k = x(yz)

xe = x
=> x + e + k = x
=> e = -k

xx' = e
x + x' + k = -k
x' = -(x + 2k)

** Set B
R x R : Set of all points on a plane

1. (a, b) * (c,d) = (ad+bc,bd) on set {(x,y) \in R x R, y\ne0}

   Commutative: True
   Since these are points on a plane, assuming that bd = db since we are 
   multiplicating 2 rationals on both sides. \\
   (a,b)*(c,d) = (ad+bc,bd) \\
   (c,d)*(a,b) = (cb+ad,db) 

   Associative: True \\
   Identity: True: (0,1) \\
   Inverse: True: $(\frac{-a}{b^2},\frac{1}{b})$

** Set C

1. Identity: \empty \\
   A + \empty \\
   = (A - \empty) \cup (\empty - A) \\
   = A \cup \empty \\
   = A \\
2. Inverse: A \\
   A + A' = \empty, by the definition that the element is either in A or in A'.

** Set D

G = {V, H, D, I}
Operation table for <G, *>

  | * | I | V | H | D |
  |---+---+---+---+---|
  | I | I | V | H | D |
  | V | V | I | D | H |
  | H | H | D | I | V |
  | D | D | H | V | I |

<G, *> is a group because:
Associative: Yes
Identity: I
Inverse: Each element is its own inverse.

** Set F

1. (a_{1}a_{2}...a_{n}) + (b_{1}b_{2}...b_{n}) = (b_{1}b_{2}...b_{n}) + (a_{1}a_{2}...a_{n})

   Commutative law wor words of length 1: 0 + 1 = 1 + 0 = 1
    
   (a_{1}a_{2}...a_{n}) + (b_{1}b_{2}...b_{n}) \\
   = (a_{1} + b_{1}, a_{2}+b_{2}...a_{n}+b_{n}) (Since each is a command of length 1) \\
   = (b_{1} + a_{1}, b_{2} + a_{2}...b_{n}+a_{n}) \\
   = (b_{1}b_{2}...b_{n}) + (a_{1}a_{2}...a_{n}) \\

2. Checked
3. Similar to 1
4. $e$ = 0^n, i.e. string of 0 repeated n times.
5. Each word is inverse of itself. Adding a word to itself results in $e$.
   (1001) + (1001) = (0000)

** Set G

1. C_1 = { 00000, 00111, 01001, 01110, 10011, 10100, 11010, 11101 }
2. a) C_2:
   
   |   Info bits | Parity bits |                       |
   | a_1 a_2 a_3 | a_4 a_5 a_6 |                       |
   |-------------+-------------+-----------------------|
   |         000 |         000 |                       |
   |         001 |         001 |                       |
   |         010 |         111 | a_4 = a_2             |
   |         011 |         110 | a_5 = a_1 + a_2       |
   |         100 |         011 | a_6 = a_1 + a_2 + a_3 |
   |         101 |         010 |                       |
   |         110 |         100 |                       |
   |         111 |         101 |                       |
 
   b) Min distance = 2
   
   c) a_1 changes => a_5 and a_6 have to change \\ 
      a_2 changes => a_4, a_5, a_6 have to change \\ 
      a_3 changes => a_6 has to change *This is the minimum change* \\ 
      a_4 => a2 \\ 
      a_5 => either a_1 or a_2 \\ 
      a_6 => either one or all 3 of a_1, a_2, a_3 
   
